{
  "domain": "MAKER",
  "target": "FMU",
  "serviceComponentTypes": {},
  "atomicComponentTypes": {
    "0bfbd1aa-6174-4017-a99a-99f04d4040ca": {
      "sharedVariables": [],
      "libraries": [],
      "runnables": [
        {
          "implementation": "#define STATE_READ_DISTANCE 0\n#define STATE_ACTIVATE_AF   1\n\n#define STATIBILIZATION_T \t3     // 1500ms\n\nvoid monitor_movement(void){\n\tstatic uint8_t state \u003d STATE_READ_DISTANCE;\n  \tuint8_t next_state \u003d STATE_READ_DISTANCE;\n  \n  \tstatic uint8_t previous_distance \u003d 50;\n  \tuint8_t distance \u003d 50;\n  \n  \tstatic uint8_t stabilization_counter \u003d 0;\n  \n  \tuint8_t switch_status \u003d 0;\n  \tuint8_t activation_trigger \u003d 1;\n  \n  \tRTE_Call_read_switch_status(\u0026switch_status);\n  \n  \tif(!switch_status){\n    \tprevious_distance \u003d 50;\n      \tstabilization_counter \u003d 0;\n      \tstate \u003d STATE_READ_DISTANCE;\n    \treturn;\n  \t}\n  \n  \tswitch(state){\n      case STATE_READ_DISTANCE:\n        distance \u003d *RTE_Read_screen_distance();\n      \n      \t// It is moving\n      \tif(distance !\u003d previous_distance){\n          stabilization_counter \u003d 0;\n          next_state \u003d STATE_READ_DISTANCE;\n        } else {\n          // Is it stabilized?\n          if(stabilization_counter++ \u003d\u003d 5){\n            next_state \u003d STATE_ACTIVATE_AF;\n          } else {\n            next_state \u003d STATE_READ_DISTANCE;\n          }\n        }\n      \n      \tprevious_distance \u003d distance;\n      \tbreak;\n      case STATE_ACTIVATE_AF:\n      \t// Trigger autofocus when projector is stabilized\n      \tRTE_Write_activation(\u0026activation_trigger);\n      \tnext_state \u003d STATE_READ_DISTANCE;\n      \tbreak;\n      default:\n      \tbreak;\n    }\n  \n  \tstate \u003d next_state;\n}\n",
          "arguments": [],
          "activation": {
            "type": "PERIODIC",
            "period": "200",
            "uuid": "eb33be9c-4362-481a-bf40-e7f1522f2c83"
          },
          "implementationType": "C",
          "name": "monitor_movement",
          "uuid": "2cc4c961-7c2e-4336-b3a1-1234242c9d2d"
        }
      ],
      "ports": {
        "NewPort2": {
          "direction": "IN",
          "category": "DATA",
          "type": "uint16_t",
          "name": "screen_distance",
          "uuid": "1dbef011-dda7-45e4-9c84-dbf4e002d99a"
        },
        "NewPort1": {
          "direction": "OUT",
          "category": "DATA",
          "type": "uint8_t",
          "name": "activation",
          "uuid": "b7832967-24d0-4e6e-8308-468fd1088778"
        },
        "NewPort3": {
          "direction": "IN",
          "category": "OPERATION",
          "operation": "",
          "name": "read_switch_status",
          "uuid": "bb8c6c1b-3f9c-4460-9b19-620dab77a5e9"
        }
      },
      "category": "USER",
      "name": "Autofocus_Activation",
      "uuid": "0bfbd1aa-6174-4017-a99a-99f04d4040ca"
    },
    "0655257b-e10e-48ab-bfe5-fb2d2c9f5aec": {
      "sharedVariables": [],
      "initialize": "initialize",
      "libraries": [],
      "runnables": [
        {
          "implementation": "#include \u003cmath.h\u003e\n\n#define DISTANCE_MIN 50\n#define DISTANCE_MAX 400\n\n#define C1 0.285\n#define C0 165.714\n\n// IN  : Distance range \u003d [50, 400]\n// OUT : Angle range    \u003d [180, 280]\n// Linear function as first approximation\n//    y \u003d 0.285x + 165.714\n\nvoid compute_angle(void){\n\tuint16_t distance_to_screen \u003d DISTANCE_MIN;\n   \tfloat motor_angle \u003d 180;\n  \tstatic uint16_t round_motor_angle \u003d 180;\n  \n  \tdistance_to_screen \u003d *RTE_Read_screen_distance();\n  \n  \tif(distance_to_screen \u003e\u003d DISTANCE_MIN \u0026\u0026 distance_to_screen \u003c\u003d DISTANCE_MAX){\n    \tmotor_angle \u003d C1 * distance_to_screen + C0;\n      \tround_motor_angle \u003d (uint16_t) floor(motor_angle + 0.5f);\n  \t}\n  \n \tRTE_Call_set_motor_angle(round_motor_angle);\n}\n",
          "arguments": [],
          "activation": {
            "type": "TRIGGER_ON_DATA_RECEPTION",
            "portID": "75f3cde6-d4a1-4c38-a115-a721a56cdc2d",
            "uuid": "c0e91adf-0acb-417a-bb64-24f19c23e972"
          },
          "implementationType": "C",
          "name": "compute_angle",
          "uuid": "e3210401-d8c2-4e07-8a56-8817d685e877"
        },
        {
          "implementation": "// Initial value for motor angle\nvoid initialize(void){\n\tRTE_Call_set_motor_angle(180);\n}",
          "arguments": [],
          "implementationType": "C",
          "name": "initialize",
          "uuid": "2cdb4827-e330-4531-b825-8f143487c866"
        }
      ],
      "ports": {
        "NewPort2": {
          "direction": "IN",
          "category": "DATA",
          "type": "uint16_t",
          "name": "screen_distance",
          "uuid": "f073094b-699c-4510-a7a9-bcd7675380f7"
        },
        "NewPort1": {
          "direction": "IN",
          "category": "DATA",
          "type": "uint8_t",
          "name": "activation",
          "uuid": "75f3cde6-d4a1-4c38-a115-a721a56cdc2d"
        },
        "NewPort3": {
          "direction": "IN",
          "category": "OPERATION",
          "operation": "",
          "name": "set_motor_angle",
          "uuid": "114c31dc-76a6-4530-afc8-0a14f0259ec2"
        }
      },
      "category": "USER",
      "name": "Autofocus_Control",
      "uuid": "0655257b-e10e-48ab-bfe5-fb2d2c9f5aec"
    },
    "14e534da-cb12-4701-94d3-71228b7a293b": {
      "sharedVariables": [],
      "libraries": [],
      "runnables": [
        {
          "implementation": "#include \"Fmi_Cfg.h\" // Ids for \u003cXXX\u003eWriteToSharedObj\n#include \"ASimSharedObjUtils.h\" // \u003cXXX\u003eWriteToSharedObj\n\nvoid read_distance(uint16_t* distance){\n  fmi2Integer data;\n  \n  fmi2IntegerReadFromWriteBuffer(InputId_Ultrasonic_Sensor_Driver_read_distance_0, \u0026data);\n  \n  *distance \u003d (uint16_t) data;\n}",
          "arguments": [
            "uint16_t*:OUT"
          ],
          "implementationType": "C",
          "name": "read_distance",
          "uuid": "6b3943e0-6a62-403d-ba7f-ebe984a00a69"
        }
      ],
      "ports": {
        "NewPort1": {
          "direction": "OUT",
          "category": "OPERATION",
          "operation": "read_distance",
          "name": "read_distance",
          "uuid": "55cfe1ac-dcbe-4887-85f6-88c08506f04c"
        }
      },
      "category": "SERVICE",
      "name": "Ultrasonic_Sensor_Driver",
      "uuid": "14e534da-cb12-4701-94d3-71228b7a293b"
    },
    "ffaa95e7-80cb-481a-88f6-c94fa5831492": {
      "sharedVariables": [],
      "libraries": [],
      "runnables": [
        {
          "implementation": "#define K 0.45\n//filter noise on sensor \n\nvoid read_sensor(void){\n\tuint16_t new_distance \u003d 0;\n  \tstatic uint16_t distance \u003d 0;\n  \n\tRTE_Call_read_distance(\u0026new_distance);\n  \t// Remove noise\n  \tdistance \u003d K * new_distance + (1 - K) * distance;\n  \t\n  \tRTE_Write_screen_distance(\u0026distance);\n}\n",
          "arguments": [],
          "activation": {
            "type": "PERIODIC",
            "period": "25",
            "uuid": "92c9af7f-6253-4d78-8087-788ff9fb5b5e"
          },
          "implementationType": "C",
          "name": "read_sensor",
          "uuid": "15262a6a-1886-4b71-924d-799955a02cfc"
        }
      ],
      "ports": {
        "NewPort2": {
          "direction": "IN",
          "category": "OPERATION",
          "operation": "",
          "name": "read_distance",
          "uuid": "f1f935dd-70be-4461-b0cf-6ed003392584"
        },
        "NewPort1": {
          "direction": "OUT",
          "category": "DATA",
          "type": "uint16_t",
          "name": "screen_distance",
          "uuid": "0361f746-acdb-4930-989a-f2f77e468647"
        }
      },
      "category": "USER",
      "name": "Sensor_Signal_Filtering",
      "uuid": "ffaa95e7-80cb-481a-88f6-c94fa5831492"
    },
    "d0ed4687-2351-4cf1-aeac-d8a689aefcb5": {
      "sharedVariables": [],
      "libraries": [],
      "runnables": [
        {
          "implementation": "#include \"Fmi_Cfg.h\" // Ids for \u003cXXX\u003eWriteToSharedObj\n#include \"ASimSharedObjUtils.h\" // \u003cXXX\u003eWriteToSharedObj\n\nvoid set_motor_angle(uint16_t angle){\n  \tfmi2Integer buf \u003d (fmi2Integer) angle;\n  \tfmi2IntegerWriteToSharedObj(SharedId_Servo_Motor_Driver_set_motor_angle_0, \u0026buf);\n}",
          "arguments": [
            "uint16_t:IN"
          ],
          "implementationType": "C",
          "name": "set_motor_angle",
          "uuid": "af0d0ded-e0db-417b-bc33-ba7356c72fb5"
        }
      ],
      "ports": {
        "NewPort1": {
          "direction": "OUT",
          "category": "OPERATION",
          "operation": "set_motor_angle",
          "name": "set_motor_angle",
          "uuid": "6e95f797-aac5-4cae-af14-b8fbacaf688e"
        }
      },
      "category": "SERVICE",
      "name": "Servo_Motor_Driver",
      "uuid": "d0ed4687-2351-4cf1-aeac-d8a689aefcb5"
    },
    "0048fabe-ce8f-439f-ade0-6487abdf736c": {
      "sharedVariables": [],
      "libraries": [],
      "runnables": [
        {
          "implementation": "#include \u003cstdint.h\u003e\n#include \"Fmi_Cfg.h\" // Ids for \u003cXXX\u003eWriteToSharedObj\n#include \"ASimSharedObjUtils.h\" // \u003cXXX\u003eWriteToSharedObj\n\nvoid read_switch_status(uint8_t* status){\n  fmi2Integer data;\n  \n  fmi2IntegerReadFromWriteBuffer(InputId_Switch_Button_Driver_read_switch_status_0, \u0026data);\n  \n  *status \u003d (uint8_t) data;\n}",
          "arguments": [
            "uint8_t*:OUT"
          ],
          "implementationType": "C",
          "name": "read_switch_status",
          "uuid": "22898a38-e7f2-4adf-8f37-116d084f4d0b"
        }
      ],
      "ports": {
        "NewPort1": {
          "direction": "OUT",
          "category": "OPERATION",
          "operation": "read_switch_status",
          "name": "read_switch_status",
          "uuid": "7375766a-b163-4e6d-a148-c709c7bec2c5"
        }
      },
      "category": "SERVICE",
      "name": "Switch_Button_Driver",
      "uuid": "0048fabe-ce8f-439f-ade0-6487abdf736c"
    }
  },
  "compositeComponentTypes": {
    "b10150ab-7f07-410c-a137-78886ae26479": {
      "components": [
        {
          "x": 386.0,
          "y": 353.0,
          "typeID": "0655257b-e10e-48ab-bfe5-fb2d2c9f5aec",
          "name": "Autofocus_Control",
          "uuid": "9c6db1cd-a1c1-4b84-9f45-b5200216ba42"
        },
        {
          "x": -196.0,
          "y": 333.0,
          "typeID": "ffaa95e7-80cb-481a-88f6-c94fa5831492",
          "name": "Sensor_Signal_Filtering",
          "uuid": "50cdaf07-1366-4058-8c1c-8f503aa26796"
        },
        {
          "x": 384.0,
          "y": 26.0,
          "typeID": "0bfbd1aa-6174-4017-a99a-99f04d4040ca",
          "name": "Autofocus_Activation",
          "uuid": "1fe68029-e64a-457c-a9e1-ab33c4bdf666"
        },
        {
          "x": 905.0,
          "y": 237.0,
          "typeID": "d0ed4687-2351-4cf1-aeac-d8a689aefcb5",
          "name": "Servo_Motor_Driver",
          "uuid": "9340e4d0-6226-47b9-ac44-3e50d920313c"
        },
        {
          "x": -743.0,
          "y": 227.0,
          "typeID": "14e534da-cb12-4701-94d3-71228b7a293b",
          "name": "Ultrasonic_Sensor_Driver",
          "uuid": "455d2a56-4bcc-46b2-bc08-4261a9fb1150"
        },
        {
          "x": -300.0,
          "y": -8.0,
          "typeID": "0048fabe-ce8f-439f-ade0-6487abdf736c",
          "name": "Switch_Button_Driver",
          "uuid": "9474eb04-315f-4e8f-a429-6c41c1cb4291"
        }
      ],
      "connections": [
        {
          "source": {
            "portID": "0361f746-acdb-4930-989a-f2f77e468647",
            "componentInstanceID": "50cdaf07-1366-4058-8c1c-8f503aa26796",
            "delegation": false,
            "uuid": "81a9f76c-5558-4a6d-9ccc-bce5cead8070"
          },
          "destination": {
            "portID": "1dbef011-dda7-45e4-9c84-dbf4e002d99a",
            "componentInstanceID": "1fe68029-e64a-457c-a9e1-ab33c4bdf666",
            "delegation": false,
            "uuid": "2c260ecd-fe25-4588-9798-d3703a89bf13"
          },
          "uuid": "3819dd03-a83e-4522-baf6-6c94b661d1f5"
        },
        {
          "source": {
            "portID": "0361f746-acdb-4930-989a-f2f77e468647",
            "componentInstanceID": "50cdaf07-1366-4058-8c1c-8f503aa26796",
            "delegation": false,
            "uuid": "f4729408-b907-4083-b624-5a5e649d2e2d"
          },
          "destination": {
            "portID": "f073094b-699c-4510-a7a9-bcd7675380f7",
            "componentInstanceID": "9c6db1cd-a1c1-4b84-9f45-b5200216ba42",
            "delegation": false,
            "uuid": "8392b77c-ff5a-43fe-a0b1-54ec6dad2988"
          },
          "uuid": "65864ce5-2a13-4814-b9f2-0b9844c83337"
        },
        {
          "source": {
            "portID": "6e95f797-aac5-4cae-af14-b8fbacaf688e",
            "componentInstanceID": "9340e4d0-6226-47b9-ac44-3e50d920313c",
            "delegation": false,
            "uuid": "efb3cd6e-09f4-4454-bce7-26bde8449f68"
          },
          "destination": {
            "portID": "114c31dc-76a6-4530-afc8-0a14f0259ec2",
            "componentInstanceID": "9c6db1cd-a1c1-4b84-9f45-b5200216ba42",
            "delegation": false,
            "uuid": "b90e43a7-26d0-4f93-a1a9-5bb911383771"
          },
          "uuid": "7d97d493-d1e5-425f-a08d-086ce9b1e4e2"
        },
        {
          "source": {
            "portID": "b7832967-24d0-4e6e-8308-468fd1088778",
            "componentInstanceID": "1fe68029-e64a-457c-a9e1-ab33c4bdf666",
            "delegation": false,
            "uuid": "a85c5ba1-e55d-4f8b-ab01-e2fccd21d090"
          },
          "destination": {
            "portID": "75f3cde6-d4a1-4c38-a115-a721a56cdc2d",
            "componentInstanceID": "9c6db1cd-a1c1-4b84-9f45-b5200216ba42",
            "delegation": false,
            "uuid": "3f4f483a-6eb0-42af-b2d3-4c62e95ced4a"
          },
          "uuid": "32e5e12b-4609-48ef-8704-b9e00728d6ac"
        },
        {
          "source": {
            "portID": "55cfe1ac-dcbe-4887-85f6-88c08506f04c",
            "componentInstanceID": "455d2a56-4bcc-46b2-bc08-4261a9fb1150",
            "delegation": false,
            "uuid": "9ee0c222-27f0-4248-81de-1e849e49b219"
          },
          "destination": {
            "portID": "f1f935dd-70be-4461-b0cf-6ed003392584",
            "componentInstanceID": "50cdaf07-1366-4058-8c1c-8f503aa26796",
            "delegation": false,
            "uuid": "67b5118a-ee2a-4cf9-a36e-d46c3dcb6739"
          },
          "uuid": "e35eac2b-d324-4a30-a59b-a959b465dd41"
        },
        {
          "source": {
            "portID": "7375766a-b163-4e6d-a148-c709c7bec2c5",
            "componentInstanceID": "9474eb04-315f-4e8f-a429-6c41c1cb4291",
            "delegation": false,
            "uuid": "fdb63706-b6fd-49fc-b406-f37df0be0e81"
          },
          "destination": {
            "portID": "bb8c6c1b-3f9c-4460-9b19-620dab77a5e9",
            "componentInstanceID": "1fe68029-e64a-457c-a9e1-ab33c4bdf666",
            "delegation": false,
            "uuid": "d8a8cd44-1e34-402e-881b-fe5987e47b19"
          },
          "uuid": "9de577f5-c015-49b5-a6e6-8172667003f7"
        }
      ],
      "ports": {},
      "category": "USER",
      "name": "Beamy_Autofocus_Controller",
      "uuid": "b10150ab-7f07-410c-a137-78886ae26479"
    }
  },
  "datatypes": [],
  "rootCompositeInstance": {
    "x": 0.0,
    "y": 0.0,
    "typeID": "b10150ab-7f07-410c-a137-78886ae26479",
    "name": "Beamy_Autofocus_Controller",
    "uuid": "d418ba5b-587d-4317-993e-c9b70c2819fd"
  },
  "defaultRepository": {
    "type": "GIT",
    "remoteRepository": "https://github.com/dampicard/AF_control.git",
    "user": "",
    "pwd": "",
    "accessToken": "776f3d5453204c0838ec8770d232471bafda27d6"
  },
  "testCases": [
    {
      "implementation": "#include \u003cASim_Api.h\u003e\n#include \u003cfmuApi.h\u003e\n\nvoid testcase1(int id){\n\t/* Run simulation during 1 second */\n\tASim_Runduring(id, 1.0);\n\t/* Add the call to C or Cpp methods of TestCase */\n}",
      "name": "testcase1d",
      "uuid": "ba334404-9dc2-4ab9-8b6b-113c07910235"
    }
  ],
  "testPlans": [],
  "buildConfigurations": [],
  "name": "Beamy_Autofocus_Controller",
  "uuid": "410c578a-1f3a-4b62-8d24-4b9d8fe9cb03"
}